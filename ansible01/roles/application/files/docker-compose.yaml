version: '3.3'
services:
  mq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: always
    # networks:
    #   - overlay_network

  db:
    image: "postgres:15.1-alpine"
    ports:
      - "5432:5432"
    volumes:
      - shop_db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users_db
    restart: always
    # networks:
    #   - overlay_network

  session:
    image: "kirillosin/session-service"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users_db
    depends_on:
      - db
    # networks:
    #   - overlay_network

  hotelservice:
    image: "kirillosin/hotel-service"
    ports:
      - "8082:8082"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hotels_db
    depends_on:
      - db
    # networks:
    #   - overlay_network

  paymentservice:
    image: "kirillosin/payment-service"
    ports:
      - "8084:8084"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payments_db
    depends_on:
      - db
    # networks:
    #   - overlay_network

  loyaltyservice:
    image: "kirillosin/loyalty-service"
    ports:
      - "8085:8085"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: balances_db
    depends_on:
      - db
    # networks:
    #   - overlay_network

  booking:
    image: "kirillosin/booking-service"
    ports:
      - "8083:8083"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: reservations_db
      RABBIT_MQ_HOST: mq
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_USER: guest
      RABBIT_MQ_PASSWORD: guest
      RABBIT_MQ_QUEUE_NAME: messagequeue
      RABBIT_MQ_EXCHANGE: messagequeue-exchange
      HOTEL_SERVICE_HOST: hotelservice
      HOTEL_SERVICE_PORT: 8082
      PAYMENT_SERVICE_HOST: paymentservice
      PAYMENT_SERVICE_PORT: 8084
      LOYALTY_SERVICE_HOST: loyaltyservice
      LOYALTY_SERVICE_PORT: 8085
    depends_on:
      - db
      - mq
    # networks:
    #   - overlay_network

  report:
    image: "kirillosin/report-service"
    ports:
      - "8086:8086"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: statistics_db
      RABBIT_MQ_HOST: mq
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_USER: guest
      RABBIT_MQ_PASSWORD: guest
      RABBIT_MQ_QUEUE_NAME: messagequeue
      RABBIT_MQ_EXCHANGE: messagequeue-exchange
    depends_on:
      - db
      - mq
    # networks:
    #   - overlay_network

  gateway:
    image: "kirillosin/gateway-service"
    environment:
      SESSION_SERVICE_HOST: session
      SESSION_SERVICE_PORT: 8081
      HOTEL_SERVICE_HOST: hotelservice
      HOTEL_SERVICE_PORT: 8082
      BOOKING_SERVICE_HOST: booking
      BOOKING_SERVICE_PORT: 8083
      PAYMENT_SERVICE_HOST: paymentservice
      PAYMENT_SERVICE_PORT: 8084
      LOYALTY_SERVICE_HOST: loyaltyservice
      LOYALTY_SERVICE_PORT: 8085
      REPORT_SERVICE_HOST: report
      REPORT_SERVICE_PORT: 8086
      SHOP_URL: https://shop
      SHOP_PORT: 8081
    depends_on:
      - session
      - hotelservice
      - booking
      - paymentservice
      - loyaltyservice
      - report
    # networks:
    #   - overlay_network

  nginx:
    image: nginx:1.16.0-alpine
    ports:
      - "80:80"
      - "8081:8081"
      - "8087:8087"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - session
      - gateway
    entrypoint: >
      sh -c "
      apk add --no-cache curl;
      while ! curl -s http://session:8081 > /dev/null 2>&1 || ! curl -s http://gateway:8087 > /dev/null 2>&1; do
        echo 'Waiting for session and gateway to be available...';
        sleep 5;
      done;
      echo 'Session and gateway are available, starting Nginx';
      nginx -g 'daemon off;'"

volumes:
  shop_db:

# networks:
#   overlay_network:
#     driver: overlay